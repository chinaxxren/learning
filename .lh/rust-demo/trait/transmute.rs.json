{
    "sourceFile": "rust-demo/trait/transmute.rs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1731503001710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731503065224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,12 @@\n-use std::mem::transmute;\n-use std::fmt::Debug;\n \n-fn main() {\n-    let v = vec![1, 2, 3, 4];\n-    let a: &Vec<u64> = &v;\n-    // 转为 trait object\n-    let b: &dyn Debug = &v;\n-    println!(\"a: {}\", a as *const _ as usize);\n-    println!(\"b: {:?}\", unsafe { transmute::<_, (usize, usize)>(b) });\n+use std::mem::transmute;\n+use std::fmt::Debug;\n+\n+fn main() {\n+    let v = vec![1, 2, 3, 4];\n+    let a: &Vec<u64> = &v;\n+    // 转为 trait object\n+    let b: &dyn Debug = &v;\n+    println!(\"a: {}\", a as *const _ as usize);\n+    println!(\"b: {:?}\", unsafe { transmute::<_, (usize, usize)>(b) });\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1731503001710,
            "name": "Commit-0",
            "content": "use std::mem::transmute;\nuse std::fmt::Debug;\n\nfn main() {\n    let v = vec![1, 2, 3, 4];\n    let a: &Vec<u64> = &v;\n    // 转为 trait object\n    let b: &dyn Debug = &v;\n    println!(\"a: {}\", a as *const _ as usize);\n    println!(\"b: {:?}\", unsafe { transmute::<_, (usize, usize)>(b) });\n}"
        }
    ]
}